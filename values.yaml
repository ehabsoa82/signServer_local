# Default values for signserver-community-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

signserver:
  useEphemeralH2Database: true
  useH2Persistence: false
  #existingH2PersistenceClaim: "database-data-claim"
  importAppserverKeystore: true
  appserverKeystoreSecret: signserver-keystore
  importAppserverTruststore: true
  appserverTruststoreSecret: signserver-truststore
  importWorkerProperties: false
  #workerPropertiesSecret: workers-secret
  importKeystores: false
  #keystoresSecret: signer-keystores-secret
  #keystoresMountPath: /mnt/external
  env:
    SIGNSERVER_ADMIN_TLS_CLIENT_AUTH: "true"
    SIGNSERVER_ADMIN_TLS_CLIENT_CERT: "true"
    SIGNSERVER_HEALTHCHECK_ENABLED: "true"
    SIGNSERVER_ADMIN_AUTHTYPE: "CLIENTCERT"
    SIGNSERVER_ADMIN_TRUSTSTORE_PATH: /opt/keyfactor/signserver/conf/truststore.jks
    SIGNSERVER_ADMIN_TRUSTSTORE_PASSWORD: signserver
    SIGNSERVER_KEYSTORE_PATH: /opt/keyfactor/secrets/external/tls/ks/server.jks
    SIGNSERVER_KEYSTORE_PASSWORD: changeit
  # Extra init containers to be added to the deployment
  initContainers: []
  # Extra sidecar containers to be added to the deployment
  sidecarContainers: []
  # Extra volumes to be added to the deployment
  volumes:
    - name: admin-config
      configMap:
        name: signserver-admin-config
    - name: truststore
      configMap:
        name: signserver-truststore
    - name: keystore
      secret:
        secretName: signserver-keystore
  # Extra volume mounts to be added to the deployment
  volumeMounts:
    - name: admin-config
      mountPath: /opt/keyfactor/signserver/conf/admins.properties
      subPath: authorizationdata.properties
    - name: truststore
      mountPath: /opt/keyfactor/signserver/conf/truststore.jks
      subPath: truststore.jks
    - name: keystore
      mountPath: /opt/keyfactor/secrets/external/tls/ks
      readOnly: true

# Probe settings
probes:
  startup:
    initialDelaySeconds: 60
    periodSeconds: 10
    failureThreshold: 30
  liveness:
    periodSeconds: 10
    failureThreshold: 3
    initialDelaySeconds: 60
    httpGet:
      path: /
      port: http
  readiness:
    periodSeconds: 10
    failureThreshold: 3
    initialDelaySeconds: 60
    httpGet:
      path: /
      port: http


# Only one of the following services can be enabled at a time
services:
  directHttp:
    enabled: true
    type: ClusterIP
    httpPort: 8080
    httpsPort: 8443
  proxyAJP:
    enabled: false
    type: ClusterIP
    bindIP: 0.0.0.0
    port: 8009
  proxyHttp:
    enabled: false
    type: ClusterIP
    bindIP: 0.0.0.0
    httpPort: 8081
    httpsPort: 8082
  # Extra sidecar ports to be added to the service
  sidecarPorts: []

# Configure Ingress for web access
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "route"
    nginx.ingress.kubernetes.io/session-cookie-expires: "172800"
    nginx.ingress.kubernetes.io/session-cookie-max-age: "172800"
  hosts:
    - host: "signserver.local"
      paths:
        - path: /
          pathType: Prefix

replicaCount: 1

resources:
  requests:
    memory: "512Mi"
    cpu: "200m"
  limits:
    memory: "2Gi"
    cpu: "1000m"

image:
  repository: keyfactor/signserver-ce
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion
  #tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
